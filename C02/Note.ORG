#+TITLE: Chapter 02



* Insertion Sort
#+BEGIN_SRC C++
/* Pseudocode */

i ← 1
while i < length(A)
    j ← i
    while j > 0 and A[j-1] > A[j]
        swap A[j] and A[j-1]
        j ← j - 1
    end while
    i ← i + 1
end while

#+END_SRC

#+BEGIN_SRC C++
/* C++ Implementation */

void InsertionSort(int A[], int length)
{
    int key = 0;
    for (int i = 1; i < length; i++)
    {
        key = A[i];
        int j = i - 1;
        while (j >= 0)
        {
            if (A[j] > key)
                A[j + 1] = A[j];
            else
                break;
            j--;
        }
        A[j + 1] = key;
    }
}

#+END_SRC



* Selection Sort
#+BEGIN_SRC C++
/* C++ Implementation */
void SelectionSort(int A[], int length)
{
    for (int i = 0; i < length; i++)
    {
        int mini = i;
        for (int j = i + 1; j < length; j++)
        {
            if (A[j] < A[mini])
            {
                mini = j;
            }
        }
        int temp = A[i];
        A[i] = A[mini];
        A[mini] = temp;
    }
}

#+END_SRC


* Divide and Conquer
分治模式在每一层递归上都有三个步骤
- 分解(Divide)：将原问题分解成一系列子问题
- 解决(Conquer): 赌鬼地解各子问题。若子问题足够小，则直接求解
- 合并(Combine): 将子问题的结果合并成原问题的解
